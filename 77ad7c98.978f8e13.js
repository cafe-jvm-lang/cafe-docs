(window.webpackJsonp=window.webpackJsonp||[]).push([[18],{108:function(e,t,n){"use strict";n.d(t,"a",(function(){return b})),n.d(t,"b",(function(){return h}));var o=n(0),i=n.n(o);function r(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function a(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var o=Object.getOwnPropertySymbols(e);t&&(o=o.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,o)}return n}function c(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?a(Object(n),!0).forEach((function(t){r(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):a(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}function p(e,t){if(null==e)return{};var n,o,i=function(e,t){if(null==e)return{};var n,o,i={},r=Object.keys(e);for(o=0;o<r.length;o++)n=r[o],t.indexOf(n)>=0||(i[n]=e[n]);return i}(e,t);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);for(o=0;o<r.length;o++)n=r[o],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(i[n]=e[n])}return i}var l=i.a.createContext({}),s=function(e){var t=i.a.useContext(l),n=t;return e&&(n="function"==typeof e?e(t):c(c({},t),e)),n},b=function(e){var t=s(e.components);return i.a.createElement(l.Provider,{value:t},e.children)},d={inlineCode:"code",wrapper:function(e){var t=e.children;return i.a.createElement(i.a.Fragment,{},t)}},u=i.a.forwardRef((function(e,t){var n=e.components,o=e.mdxType,r=e.originalType,a=e.parentName,l=p(e,["components","mdxType","originalType","parentName"]),b=s(n),u=o,h=b["".concat(a,".").concat(u)]||b[u]||d[u]||r;return n?i.a.createElement(h,c(c({ref:t},l),{},{components:n})):i.a.createElement(h,c({ref:t},l))}));function h(e,t){var n=arguments,o=t&&t.mdxType;if("string"==typeof e||o){var r=n.length,a=new Array(r);a[0]=u;var c={};for(var p in t)hasOwnProperty.call(t,p)&&(c[p]=t[p]);c.originalType=e,c.mdxType="string"==typeof e?e:o,a[1]=c;for(var l=2;l<r;l++)a[l]=n[l];return i.a.createElement.apply(null,a)}return i.a.createElement.apply(null,n)}u.displayName="MDXCreateElement"},88:function(e,t,n){"use strict";n.r(t),n.d(t,"frontMatter",(function(){return a})),n.d(t,"metadata",(function(){return c})),n.d(t,"toc",(function(){return p})),n.d(t,"default",(function(){return s}));var o=n(3),i=n(7),r=(n(0),n(108)),a={id:"prototypes",title:"Prototypes",sidebar_label:"Prototypes"},c={unversionedId:"prototypes",id:"prototypes",isDocsHomePage:!1,title:"Prototypes",description:"Objects & Prototypes",source:"@site/docs/prototypes.md",slug:"/prototypes",permalink:"/docs/prototypes",editUrl:"https://github.com/cafe-jvm-lang/cafe-docs/docs/prototypes.md",version:"current",sidebar_label:"Prototypes",sidebar:"someSidebar",previous:{title:"Data Structures",permalink:"/docs/data-structures"},next:{title:"() {Functional Programming}",permalink:"/docs/functional-programming"}},p=[{value:"Objects &amp; Prototypes",id:"objects--prototypes",children:[{value:"Cafe has only one construct: <code>object</code>!",id:"cafe-has-only-one-construct-object",children:[]},{value:"<code>DynamicObject</code>",id:"dynamicobject",children:[]}]},{value:"Behavioral Delegation",id:"behavioral-delegation",children:[{value:"<code>Object.delegate(object)</code>",id:"objectdelegateobject",children:[]}]},{value:"<code>This-binding</code>",id:"this-binding",children:[{value:"<code>Call-Site</code>",id:"call-site",children:[]},{value:"Implicit Binding",id:"implicit-binding",children:[]}]}],l={toc:p};function s(e){var t=e.components,n=Object(i.a)(e,["components"]);return Object(r.b)("wrapper",Object(o.a)({},l,n,{components:t,mdxType:"MDXLayout"}),Object(r.b)("h2",{id:"objects--prototypes"},"Objects & Prototypes"),Object(r.b)("h3",{id:"cafe-has-only-one-construct-object"},"Cafe has only one construct: ",Object(r.b)("inlineCode",{parentName:"h3"},"object"),"!"),Object(r.b)("p",null,"Cafe has only one construct: object, there is no concept of class.\nEvery Object has a prototype property pointing to another object.\nThis prototype object has its own prototype , and so on this chain continues till the prototype of the object becomes null."),Object(r.b)("h3",{id:"dynamicobject"},Object(r.b)("inlineCode",{parentName:"h3"},"DynamicObject")),Object(r.b)("p",null,"All objects in cafe are usually an instance of ",Object(r.b)("inlineCode",{parentName:"p"},"DynamicObject"),", which is at the root of the prototype chain. Functions are also an instance of ",Object(r.b)("inlineCode",{parentName:"p"},"DynamicObject"),"."),Object(r.b)("h2",{id:"behavioral-delegation"},"Behavioral Delegation"),Object(r.b)("h3",{id:"objectdelegateobject"},Object(r.b)("inlineCode",{parentName:"h3"},"Object.delegate(object)")),Object(r.b)("p",null,"In cafe, delegation is the process of referring to the prototype for a property which is absent in the object which is looked upon."),Object(r.b)("p",null,Object(r.b)("inlineCode",{parentName:"p"},"Object.delegate(object)")," is used to create a new object using an existing object as the prototype of the newly created object."),Object(r.b)("pre",null,Object(r.b)("code",{parentName:"pre"},"var a = { hi: \u201chi\u201d };\n    var b = Object.delegate(a);\n    b.x = 10;\n    b.y = 11;\n    \n    cmd.println(b); # {x:10,y:11,__proto__:a}\n    \ncmd.println(b.x);   # check if x is present in b. If yes, return x.\n    \ncmd.println(b.hi);\n\n/* \n    property hi is not found in b. Thus,b.__proto__ is    checked. \n    b.__proto__ is a. a contains the property hi. Thus, hi is returned.\n*/\n\ncmd.println(b.z);\n/* \n    property z is not present in b, so check in b.__proto__.\n    B.__proto__ also doesnt have property z.So, further continuing to search in chain.\n    B.__proto__.__proto__ is DynamicObject.prototype and it doesnt contain z.\n    B.__proto__.__proto__.__proto__ is null. Thus, stop searching. This will throw an       exception at runtime.\n*/\n                                        \n")),Object(r.b)("p",null,"In any class-oriented programming, objects are copies of a class.\nIn Cafe, no copies are made. Rather, objects end up linked to each other via an internal ",Object(r.b)("inlineCode",{parentName:"p"},"__proto__"),' chain.\nThus, "',Object(r.b)("strong",{parentName:"p"},"delegation"),'" is a more appropriate term, because these relationships are not copies but ',Object(r.b)("em",{parentName:"p"},"delegation links"),"."),Object(r.b)("h2",{id:"this-binding"},Object(r.b)("inlineCode",{parentName:"h2"},"This-binding")),Object(r.b)("h3",{id:"call-site"},Object(r.b)("inlineCode",{parentName:"h3"},"Call-Site")),Object(r.b)("p",null,"Whenever a function is called, ",Object(r.b)("inlineCode",{parentName:"p"},"this")," variable is passed by default as the first argument implicitly. Functioning of this, what value it points to, can be understood with the help of function ",Object(r.b)("inlineCode",{parentName:"p"},"call-site"),".\n",Object(r.b)("inlineCode",{parentName:"p"},"Call-site")," is the location in code where a function is called (not where it's declared). We must inspect the call-site to answer the question: what's this ",Object(r.b)("strong",{parentName:"p"},Object(r.b)("inlineCode",{parentName:"strong"},"this"))," a reference to?"),Object(r.b)("pre",null,Object(r.b)("code",{parentName:"pre"},"func foo() {\n    cmd.print( this.a );\n}\nvar a = 2;\nfoo(); # callsite\n# prints 2\n")),Object(r.b)("p",null,"When foo is called, the ",Object(r.b)("inlineCode",{parentName:"p"},"this")," is set to the global module scope. Thus, when foo is invoked, ",Object(r.b)("inlineCode",{parentName:"p"},"this.a")," refers to module\u2019s ",Object(r.b)("inlineCode",{parentName:"p"},"a")," variable.\nThis is called the default ",Object(r.b)("inlineCode",{parentName:"p"},"this")," binding."),Object(r.b)("h3",{id:"implicit-binding"},"Implicit Binding"),Object(r.b)("p",null,"Implicit binding occurs when dot notation is used to invoke a function."),Object(r.b)("pre",null,Object(r.b)("code",{parentName:"pre"},"func foo() {\n    cmd.println( this.a );\n}\nvar obj = {\n    a: 2,\n    foo: foo\n};\nobj.foo(); # callsite\n# prints 2\n")),Object(r.b)("p",null,"Here, ",Object(r.b)("inlineCode",{parentName:"p"},"foo")," is invoked as a property of an ",Object(r.b)("inlineCode",{parentName:"p"},"obj"),".\nThus, ",Object(r.b)("inlineCode",{parentName:"p"},"this")," points to ",Object(r.b)("inlineCode",{parentName:"p"},"obj")," when the function is called. This is called implicit ",Object(r.b)("inlineCode",{parentName:"p"},"this")," binding."))}s.isMDXComponent=!0}}]);